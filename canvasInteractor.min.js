/**
 * canvasInteractor.js (c) 2018-22 Stefan Goessner
 * @file interaction manager for html `canvas`.
 * @author Stefan Goessner
 * @license MIT License
 */
globalThis.canvasInteractor=globalThis.canvasInteractor||{create(){const o=Object.create(this.prototype);o.constructor.apply(o,arguments);return o},fps:"?",fpsOrigin:0,frames:0,rafid:0,instances:[],tick(time){canvasInteractor.fpsCount(time);for(const instance of canvasInteractor.instances){instance.notify("tick",{t:time,dt:(time-instance.t)/1e3,dirty:instance.dirty});instance.t=time;instance.dirty=false}canvasInteractor.rafid=requestAnimationFrame(canvasInteractor.tick)},add(instance){canvasInteractor.instances.push(instance);if(canvasInteractor.instances.length===1)canvasInteractor.tick(canvasInteractor.fpsOrigin=performance.now())},remove(instance){canvasInteractor.instances.splice(canvasInteractor.instances.indexOf(instance),1);if(canvasInteractor.instances.length===0)cancelAnimationFrame(canvasInteractor.rafid)},fpsCount(time){if(time-canvasInteractor.fpsOrigin>1e3){const fps=~~(canvasInteractor.frames*1e3/(time-canvasInteractor.fpsOrigin)+.5);if(fps!==canvasInteractor.fps)for(const instance of canvasInteractor.instances)instance.notify("fps",canvasInteractor.fps=fps);canvasInteractor.fpsOrigin=time;canvasInteractor.frames=0}canvasInteractor.frames++},prototype:{constructor(ctx,{x=0,y=0,scl=1,cartesian=false}){this.ctx=ctx;this.view={x:x,y:y,scl:scl,cartesian:cartesian};this.evt={type:false,x:-2,y:-2,xi:0,yi:0,dx:0,dy:0,btn:0,xbtn:0,ybtn:0,xusr:-2,yusr:-2,dxusr:0,dyusr:0,delta:0,inside:false,hit:false,dscl:1,eps:5};this.dirty=true;const canvas=ctx.canvas;canvas.addEventListener("pointermove",this,false);canvas.addEventListener("pointerdown",this,false);canvas.addEventListener("pointerup",this,false);canvas.addEventListener("pointerenter",this,false);canvas.addEventListener("pointerleave",this,false);canvas.addEventListener("wheel",this,false);canvas.addEventListener("pointercancel",this,false);this.signals={}},deinit(){const canvas=this.ctx.canvas;canvas.removeEventListener("pointermove",this,false);canvas.removeEventListener("pointerdown",this,false);canvas.removeEventListener("pointerup",this,false);canvas.removeEventListener("pointerenter",this,false);canvas.removeEventListener("pointerleave",this,false);canvas.removeEventListener("wheel",this,false);canvas.removeEventListener("pointercancel",this,false);this.endTimer();delete this.signals;delete this.evt;delete this.ctx;return this},handleEvent(e){if(e.type in this&&(e.isPrimary||e.type==="wheel")){const bbox=e.target.getBoundingClientRect&&e.target.getBoundingClientRect()||{left:0,top:0},x=e.clientX-Math.floor(bbox.left),y=e.clientY-Math.floor(bbox.top),btn=e.buttons!==undefined?e.buttons:e.button||e.which;this.evt.type=e.type;this.evt.xi=this.evt.x;this.evt.yi=this.evt.y;this.evt.dx=this.evt.dy=0;this.evt.x=x;this.evt.y=this.view.cartesian?this.ctx.canvas.height-y:y;this.evt.xusr=(this.evt.x-this.view.x)/this.view.scl;this.evt.yusr=(this.evt.y-this.view.y)/this.view.scl;this.evt.dxusr=this.evt.dyusr=0;this.evt.dbtn=btn-this.evt.btn;this.evt.btn=btn;this.evt.delta=Math.max(-1,Math.min(1,e.deltaY||e.wheelDelta))||0;if(this.isDefaultPreventer(e.type))e.preventDefault();this[e.type]();this.notify(this.evt.type,this.evt)}else console.log(e)},pointermove(){this.evt.dx=this.evt.x-this.evt.xi;this.evt.dy=this.evt.y-this.evt.yi;if(this.evt.btn===1){this.evt.dxusr=this.evt.dx/this.view.scl;this.evt.dyusr=this.evt.dy/this.view.scl;if(!this.evt.hit){this.evt.type="pan"}else this.evt.type="drag"}this.dirty=true},pointerdown(){this.evt.xbtn=this.evt.x;this.evt.ybtn=this.evt.y},pointerup(){this.evt.type=this.evt.x===this.evt.xbtn&&this.evt.y===this.evt.ybtn?"click":"pointerup";this.evt.xbtn=this.evt.x;this.evt.ybtn=this.evt.y;this.evt.hit=false},pointerleave(){this.evt.inside=false},pointerenter(){this.evt.inside=true},wheel(){this.evt.dscl=this.evt.delta>0?8/10:10/8;this.evt.eps/=this.evt.dscl;this.dirty=true},isDefaultPreventer(type){return["pointermove","pointerdown","pointerup","wheel"].includes(type)},pntToUsr:function(p){let vw=this.view;p.x=(p.x-vw.x)/vw.scl;p.y=(p.y-vw.y)/vw.scl;return p},startTimer(){canvasInteractor.add(this);this.notify("timerstart",this);return this},endTimer(){this.notify("timerend",this.t/1e3);canvasInteractor.remove(this);return this},notify(key,val){if(this.signals[key])for(let hdl of this.signals[key])hdl(val);return this},on(key,handler){if(Array.isArray(key))for(let k of key)this.on(k,handler);else(this.signals[key]||(this.signals[key]=[])).push(handler);return this},remove(key,handler){const idx=this.signals[key]?this.signals[key].indexOf(handler):-1;if(idx>=0)this.signals[key].splice(idx,1)}}};